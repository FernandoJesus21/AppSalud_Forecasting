/* All media-queries should use em values, 
  as we want a consistent scaling for zoom and increased browser font-size functionalities.
  Due to Safari bugs rem's cannot be used */
@mixin mediaFrom($breakpoint) {
  @if $breakpoint {
    @media only screen and (min-width: em($breakpoint)) {
      @content;
    }
  }
}

@mixin gridWidth($widthRatio: "") {
  // example usage for a component in a 12 column container:
  // @include gridWidth( 8/12);
  width: calc(100% * #{$widthRatio} - #{$gutter});
}

@mixin visuallyHidden {
  position: absolute;
  height: 1px;
  width: 1px;
  margin: -1px;
  padding: 0;
  border: 0;
  white-space: nowrap;
  clip-path: inset(100%);
  clip: rect(0 0 0 0);
  overflow: hidden;
}

@mixin flex-center {
  align-items: center;
  display: flex;
  justify-content: center;
}

@mixin chart-header {
  background-color: $gris02;
  border-radius: 10px 10px 0px 0px;
  padding: rem(3px) rem(7px);
  
  
  .fas .fa-shapes {
    display: inline-block;
	height: 14px;
	width: 14px;
   }

  // text in tiles headers
  & > .item {
    color: $pal01;
    font-size: rem(14px);
    font-weight: 700;
    line-height: 1;
  }
}

// Botones en las cabeceras de los paneles
@mixin chart-header2 {
  background-color: $gris02;
  border-radius: 10px 10px 0px 0px;
  padding: rem(3px) rem(7px);
  
  
  .fas .fa-shapes {
    display: inline-block;
	height: 14px;
	width: 14px;
   }

  // text in tiles headers
  & > .item {
    color: $pal01;
    font-size: rem(14px);
    font-weight: 700;
    line-height: 1;
  }
}